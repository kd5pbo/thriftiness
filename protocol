Thriftiness's protocol:

Handshake, Pre-Crypto
---------------------

Upon initial connection, shift sends insert a fake HTTP request or other data.
This is nothing more than a configurable amount of junk data.

Example HTTP request: "GET / HTTP/1.0\r\n\r\n"

Insert waits until shift has sent a predefined (and configurable) number of
bytes, then sends a number to be used in creation of the nonce.  It is the
8-byte integer representing the total number of nonces generated so far,
encrypted with data from a chacha stream generated with the key and random
data.

Keystream Generation
--------------------

Both shift and insert generate random streams with the pre-shared key and a
nonce derived as follows:

The 64-bit time returned by time(3), XOR'd with the the nonce generated by
insert such that the least significant byte of the time ends up at the lowest
byte, address-wise, in the nonce (i.e. little-endian).  For the shift->insert
stream, the two least significant bits of the first byte are then cleared.  For
the insert->shift stream, the two least significant bits of the highest byte
are then set.

As the time is used to generate the keystream, it's necessary that shift and
insert use a time that's within a few seconds of each other.  To this end,
shift includes an option to skew the time it uses to match insert's idea of the
time.

Handshake, Post-Crypto
----------------------

After the two keystreams are generated, shift sends insert what it expects
insert's name to be (which should match INSTALLNAME, or whatever it's edited to
in the binary), null-padded on the right to INSTALLNAMELEN bytes and encrypted.
If it matches what insert expects, insert sends the name back, null-padded on
the right to INSTALLNAMELEN bytes and encrypted (or disconnects if it doesn't
match).  Shift then checks to see that what insert returned is what it
originally sent (disconnecting if it's not), and if so, the handshake is
complete.

Data Transfer
---------------

Every ethernet frame (or whatever insert is set to capture) is prepended with
the size of the as two network-byte-order bytes, and appended with the SHA512
hash of the size and the data.

Diagrams
--------

Handshake
=========
Shift      Insert

----Connected----

Arbitrary data-->

<-----------Nonce

INSTALLNAME----->

<-----INSTALLNAME


Nonce
=====
   6         5         4         3         2         1         0
3210987654321098765432109876543210987654321098765432101234567890
<--Encrypted time, from shift--><----time(3) & 0xFFFFFFFC---->DB

DB (direction bytes) is 11 for insert->shift and 00 for shift->insert data.


Message
====
16 bits---->|<-Variable length->|<-16 bits
Data Length |      Payload      | Checksum
<-------Checksummed part------->|
